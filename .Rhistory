library(RSelenium)
loginURL <- "http://games.espn.go.com/ffl/signin"
user <- 'doubledown'
pass <- 'starranger'
nteams = 12
nweeks = 9
setwd("C:/chuck/github/espnffl")
nfltms = read.csv("NFLTeams.csv",header = TRUE)
teams = data.frame(id = integer(), team = character())
teams = rbind(teams,data.frame(id = 1,team = "The Peasemakers"))
teams = rbind(teams,data.frame(id = 2,team = "Stuck in Gears"))
teams = rbind(teams,data.frame(id = 3,team = "Coffin Corner Gunners"))
teams = rbind(teams,data.frame(id = 4,team = "Quad Box"))
teams = rbind(teams,data.frame(id = 5,team = "Wilfork Island"))
teams = rbind(teams,data.frame(id = 6,team = "Boston Bobcatz"))
teams = rbind(teams,data.frame(id = 7,team = "Now I'm Selling Cars N I know Y"))
teams = rbind(teams,data.frame(id = 8,team = "Mr. Ambree Hinano!"))
teams = rbind(teams,data.frame(id = 9,team = "Love in an Elevator"))
teams = rbind(teams,data.frame(id = 10,team = "Marcy Project Freestylers"))
teams = rbind(teams,data.frame(id = 11,team = "Home of Minitron"))
teams = rbind(teams,data.frame(id = 12,team = "Tom Terrific"))
write.csv(teams, file="fteams.csv")
RSelenium::checkForServer()
RSelenium::startServer()
remDr <- remoteDriver()
remDr$open()
remDr$navigate(loginURL)
webElem <- remDr$findElement('name', 'username')
webElem$sendKeysToElement(list(user))
webElem <- remDr$findElement('name', 'password')
webElem$sendKeysToElement(list(pass))
remDr$findElement('name', 'submit')$clickElement()
allLines = data.frame(week = integer(), team = integer(), Pos = character(), Player = character(), Pts = character(), Bye = integer())
for (i in 1:nteams){
for(j in 1:nweeks)
{
dataURL <- paste0("http://games.espn.go.com/ffl/boxscorefull?leagueId=545778&teamId=",i,"&scoringPeriodId=",j,"&seasonId=2014&view=scoringperiod&version=full")
remDr$navigate(dataURL)
# YOU can get the page source for example
pageSrc <- remDr$getPageSource()[[1]]
tables = readHTMLTable(pageSrc)
myscore = tables[[2]]
kscore = tables[[3]]
dscore = tables[[4]]
bench = tables[[5]]
QB = data.frame(myscore[4,1],myscore[4,2], myscore[4,23])
RB1 = data.frame(myscore[5,1],myscore[5,2], myscore[5,23])
RB2 = data.frame(myscore[6,1],myscore[6,2], myscore[6,23])
WR1 = data.frame(myscore[7,1],myscore[7,2], myscore[7,23])
WR2 = data.frame(myscore[8,1],myscore[8,2], myscore[8,23])
TE  = data.frame(myscore[9,1],myscore[9,2], myscore[9,23])
FLEX  = data.frame(myscore[10,1],myscore[10,2], myscore[10,23])
K = data.frame(kscore[3,1],kscore[3,2],kscore[3,12])
DEF = data.frame(dscore[3,1], gsub("\\sD/ST\\sD/ST","",dscore[3,2]),dscore[3,14])
IR = subset(bench, bench$V1 == "IR")
bench=subset(bench, bench$V1 == "Bench")
BN = data.frame(Pos = character(), Player = character(), Pts = character(), Bye = integer(), stringsAsFactors = FALSE)
for (k in 1:nrow(bench))
{
BN = rbind(BN,data.frame(Pos = "BN",Player = as.character(bench[k,2]),Pts = as.character(bench[k,23]), stringsAsFactors = FALSE))
}
if (tables[[6]][1,1] == "BENCH: KICKERS")
{
KBench = tables[[6]]
KBench = subset(KBench, KBench$V1 == "Bench")
if (nrow(KBench) > 0)
{
for (k in 1:nrow(KBench))
{
BN = rbind(BN, data.frame(Pos = "BN", Player = KBench[k,2], Pts = ifelse(is.na(KBench[k,12]),0,KBench[k,12]), stringsAsFactors = FALSE))
}
}
DefBench = tables[[7]]
DefBench = subset(DefBench, DefBench$V1 == "Bench")
if (nrow(DefBench) > 0)
{
for (k in 1:nrow(DefBench))
{
BN = rbind(BN,data.frame(Pos = "BN",Player = gsub("\\sD/ST\\sD/ST","",DefBench[k,2]), Pts = ifelse(is.na(DefBench[k,14]),0,DefBench[k,14])))
}
}
}else {
KBench = NULL
DefBench = tables[[6]]
DefBench = subset(DefBench, DefBench$V1 == "Bench")
if (nrow(DefBench) > 0)
{
for (k in 1:nrow(DefBench))
{
BN = rbind(BN,data.frame(Pos = "BN",Player = gsub("\\sD/ST\\sD/ST","",DefBench[k,2]), Pts = ifelse(is.na(DefBench[k,14]),0,DefBench[k,14])))
}
}
}
if (!is.na(IR[1,2]))
{
IR = data.frame(Pos = "IR",Player = IR[1,2],Pts = IR[1,23])
} else {
IR = NULL;
}
colnames(QB)= c("Pos","Player","Pts")
colnames(RB1)= c("Pos","Player","Pts")
colnames(RB2)= c("Pos","Player","Pts")
colnames(WR1)= c("Pos","Player","Pts")
colnames(WR2)= c("Pos","Player","Pts")
colnames(TE)= c("Pos","Player","Pts")
colnames(FLEX)= c("Pos","Player","Pts")
colnames(K)=c("Pos","Player","Pts")
colnames(DEF)= c("Pos","Player","Pts")
#colnames(IR)= c("Pos","Player","Pts")
lines = rbind(QB,RB1,RB2,WR1,WR2,TE,FLEX,K,DEF,BN,IR)
lines$Player = gsub("([^a-zA-Z0-9\\s\\.,'/])"," ",lines$Player)
lines$Pts = as.numeric(as.character(lines$Pts))
lines$Bye = 0
if (nrow(lines[is.na(lines$Pts),]) > 0)
{
lines[is.na(lines$Pts),]$Bye = 1
lines[is.na(lines$Pts),]$Pts = 0
}
lines$week = j
lines$team = i
if ((tables[[6]][1,1] == "BENCH: TEAM D/ST") | (tables[[6]][1,1] == "BENCH: KICKERS"))
{
lines$Opponent = gsub(" Box Score","",tables[[7]][1,1])
}else {
lines$Opponent = gsub(" Box Score","",tables[[6]][1,1])
}
allLines = rbind(allLines, lines)
}
}
db = allLines
allLines$Player = gsub("\\s*$","",allLines$Player)
allLines$Player = gsub("Ã‚Â","",allLines$Player)
allLines$Player = gsub("Ã,Â","",allLines$Player)
allLines$OppId = match(allLines$Opponent,teams$team)
allLines$Player = gsub("\\sD/ST","",allLines$Player)
allLines$NFLTeam = gsub("(.*), *(.*)","\\2",allLines$Player)
allLines$Player = gsub("(.*), *(.*)","\\1",allLines$Player)
allLines$Player = gsub("\\*$","",allLines$Player)
allLines$Player = gsub("\\s*$","",allLines$Player)
allLines$NFLTeam = gsub("\\s*(([QPDO])|(SSPD))$","",allLines$NFLTeam)
allLines$NFLPos = gsub("^(.*)\\s+(.*)$","\\2",allLines$NFLTeam)
allLines$NFLTeam = gsub("^(.*)\\s+(.*)$","\\1",allLines$NFLTeam)
allLines$NFLTeam = gsub("\\s*$","",allLines$NFLTeam)
allLines[!is.na(match(allLines$NFLTeam, nfltms$TeamName)),]$NFLPos = "D/ST"
allLines[!is.na(match(allLines$NFLTeam, nfltms$TeamName)),]$NFLTeam = as.character(nfltms[match(allLines[!is.na(match(allLines$NFLTeam,nfltms$TeamName)),]$NFLTeam,nfltms$TeamName),]$ID)
#allLines$Opponent = NULL
write.csv(allLines, file="allLines.csv")
nweeks = 13
allLines = data.frame(week = integer(), team = integer(), Pos = character(), Player = character(), Pts = character(), Bye = integer())
remDr$open()
remDr$navigate(loginURL)
webElem <- remDr$findElement('name', 'username')
webElem$sendKeysToElement(list(user))
webElem <- remDr$findElement('name', 'password')
webElem$sendKeysToElement(list(pass))
remDr$findElement('name', 'submit')$clickElement()
allLines = data.frame(week = integer(), team = integer(), Pos = character(), Player = character(), Pts = character(), Bye = integer())
for (i in 1:nteams){
for(j in 1:nweeks)
{
dataURL <- paste0("http://games.espn.go.com/ffl/boxscorefull?leagueId=545778&teamId=",i,"&scoringPeriodId=",j,"&seasonId=2014&view=scoringperiod&version=full")
remDr$navigate(dataURL)
# YOU can get the page source for example
pageSrc <- remDr$getPageSource()[[1]]
tables = readHTMLTable(pageSrc)
myscore = tables[[2]]
kscore = tables[[3]]
dscore = tables[[4]]
bench = tables[[5]]
QB = data.frame(myscore[4,1],myscore[4,2], myscore[4,23])
RB1 = data.frame(myscore[5,1],myscore[5,2], myscore[5,23])
RB2 = data.frame(myscore[6,1],myscore[6,2], myscore[6,23])
WR1 = data.frame(myscore[7,1],myscore[7,2], myscore[7,23])
WR2 = data.frame(myscore[8,1],myscore[8,2], myscore[8,23])
TE  = data.frame(myscore[9,1],myscore[9,2], myscore[9,23])
FLEX  = data.frame(myscore[10,1],myscore[10,2], myscore[10,23])
K = data.frame(kscore[3,1],kscore[3,2],kscore[3,12])
DEF = data.frame(dscore[3,1], gsub("\\sD/ST\\sD/ST","",dscore[3,2]),dscore[3,14])
IR = subset(bench, bench$V1 == "IR")
bench=subset(bench, bench$V1 == "Bench")
BN = data.frame(Pos = character(), Player = character(), Pts = character(), Bye = integer(), stringsAsFactors = FALSE)
for (k in 1:nrow(bench))
{
BN = rbind(BN,data.frame(Pos = "BN",Player = as.character(bench[k,2]),Pts = as.character(bench[k,23]), stringsAsFactors = FALSE))
}
if (tables[[6]][1,1] == "BENCH: KICKERS")
{
KBench = tables[[6]]
KBench = subset(KBench, KBench$V1 == "Bench")
if (nrow(KBench) > 0)
{
for (k in 1:nrow(KBench))
{
BN = rbind(BN, data.frame(Pos = "BN", Player = KBench[k,2], Pts = ifelse(is.na(KBench[k,12]),0,KBench[k,12]), stringsAsFactors = FALSE))
}
}
DefBench = tables[[7]]
DefBench = subset(DefBench, DefBench$V1 == "Bench")
if (nrow(DefBench) > 0)
{
for (k in 1:nrow(DefBench))
{
BN = rbind(BN,data.frame(Pos = "BN",Player = gsub("\\sD/ST\\sD/ST","",DefBench[k,2]), Pts = ifelse(is.na(DefBench[k,14]),0,DefBench[k,14])))
}
}
}else {
KBench = NULL
DefBench = tables[[6]]
DefBench = subset(DefBench, DefBench$V1 == "Bench")
if (nrow(DefBench) > 0)
{
for (k in 1:nrow(DefBench))
{
BN = rbind(BN,data.frame(Pos = "BN",Player = gsub("\\sD/ST\\sD/ST","",DefBench[k,2]), Pts = ifelse(is.na(DefBench[k,14]),0,DefBench[k,14])))
}
}
}
if (!is.na(IR[1,2]))
{
IR = data.frame(Pos = "IR",Player = IR[1,2],Pts = IR[1,23])
} else {
IR = NULL;
}
colnames(QB)= c("Pos","Player","Pts")
colnames(RB1)= c("Pos","Player","Pts")
colnames(RB2)= c("Pos","Player","Pts")
colnames(WR1)= c("Pos","Player","Pts")
colnames(WR2)= c("Pos","Player","Pts")
colnames(TE)= c("Pos","Player","Pts")
colnames(FLEX)= c("Pos","Player","Pts")
colnames(K)=c("Pos","Player","Pts")
colnames(DEF)= c("Pos","Player","Pts")
#colnames(IR)= c("Pos","Player","Pts")
lines = rbind(QB,RB1,RB2,WR1,WR2,TE,FLEX,K,DEF,BN,IR)
lines$Player = gsub("([^a-zA-Z0-9\\s\\.,'/])"," ",lines$Player)
lines$Pts = as.numeric(as.character(lines$Pts))
lines$Bye = 0
if (nrow(lines[is.na(lines$Pts),]) > 0)
{
lines[is.na(lines$Pts),]$Bye = 1
lines[is.na(lines$Pts),]$Pts = 0
}
lines$week = j
lines$team = i
if ((tables[[6]][1,1] == "BENCH: TEAM D/ST") | (tables[[6]][1,1] == "BENCH: KICKERS"))
{
lines$Opponent = gsub(" Box Score","",tables[[7]][1,1])
}else {
lines$Opponent = gsub(" Box Score","",tables[[6]][1,1])
}
allLines = rbind(allLines, lines)
}
}
db = allLines
allLines$Player = gsub("\\s*$","",allLines$Player)
allLines$Player = gsub("Ã‚Â","",allLines$Player)
allLines$Player = gsub("Ã,Â","",allLines$Player)
allLines$OppId = match(allLines$Opponent,teams$team)
allLines$Player = gsub("\\sD/ST","",allLines$Player)
allLines$NFLTeam = gsub("(.*), *(.*)","\\2",allLines$Player)
allLines$Player = gsub("(.*), *(.*)","\\1",allLines$Player)
allLines$Player = gsub("\\*$","",allLines$Player)
allLines$Player = gsub("\\s*$","",allLines$Player)
allLines$NFLTeam = gsub("\\s*(([QPDO])|(SSPD))$","",allLines$NFLTeam)
allLines$NFLPos = gsub("^(.*)\\s+(.*)$","\\2",allLines$NFLTeam)
allLines$NFLTeam = gsub("^(.*)\\s+(.*)$","\\1",allLines$NFLTeam)
allLines$NFLTeam = gsub("\\s*$","",allLines$NFLTeam)
allLines[!is.na(match(allLines$NFLTeam, nfltms$TeamName)),]$NFLPos = "D/ST"
allLines[!is.na(match(allLines$NFLTeam, nfltms$TeamName)),]$NFLTeam = as.character(nfltms[match(allLines[!is.na(match(allLines$NFLTeam,nfltms$TeamName)),]$NFLTeam,nfltms$TeamName),]$ID)
#allLines$Opponent = NULL
write.csv(allLines, file="allLines.csv")
warnings()
allLines = db
teams = data.frame(id = integer(), team = character())
teams = rbind(teams,data.frame(id = 1,team = "The Peasemakers"))
teams = rbind(teams,data.frame(id = 2,team = "Stuck in Gears"))
teams = rbind(teams,data.frame(id = 3,team = "Coffin Corner Gunners"))
teams = rbind(teams,data.frame(id = 4,team = "Quad Box"))
teams = rbind(teams,data.frame(id = 5,team = "Wilfork Island"))
teams = rbind(teams,data.frame(id = 6,team = "Boston Bobcatz"))
teams = rbind(teams,data.frame(id = 7,team = "Now I'm Selling Cars N I know Y"))
teams = rbind(teams,data.frame(id = 8,team = "Dynasty! !"))
teams = rbind(teams,data.frame(id = 9,team = "Love in an Elevator"))
teams = rbind(teams,data.frame(id = 10,team = "Richmond Confederates"))
teams = rbind(teams,data.frame(id = 11,team = "Home of Minitron"))
teams = rbind(teams,data.frame(id = 12,team = "Tom Terrific"))
write.csv(teams, file="fteams.csv")
teams = data.frame(id = integer(), team = character())
teams = rbind(teams,data.frame(id = 1,team = "The Peasemakers"))
teams = rbind(teams,data.frame(id = 2,team = "Stuck in Gears"))
teams = rbind(teams,data.frame(id = 3,team = "Coffin Corner Gunners"))
teams = rbind(teams,data.frame(id = 4,team = "Quad Box"))
teams = rbind(teams,data.frame(id = 5,team = "Wilfork Island"))
teams = rbind(teams,data.frame(id = 6,team = "Boston Bobcatz"))
teams = rbind(teams,data.frame(id = 7,team = "Now I'm Selling Cars N I know Y"))
teams = rbind(teams,data.frame(id = 8,team = "Dynasty! !"))
teams = rbind(teams,data.frame(id = 9,team = "Love in an Elevator"))
teams = rbind(teams,data.frame(id = 10,team = "Richmond Confederates"))
teams = rbind(teams,data.frame(id = 11,team = "Home of Minitron"))
teams = rbind(teams,data.frame(id = 12,team = "Tom Terrific"))
allLines$Player = gsub("\\s*$","",allLines$Player)
allLines$Player = gsub("Ã‚Â","",allLines$Player)
allLines$Player = gsub("Ã,Â","",allLines$Player)
allLines$OppId = match(allLines$Opponent,teams$team)
allLines$Player = gsub("\\sD/ST","",allLines$Player)
allLines$NFLTeam = gsub("(.*), *(.*)","\\2",allLines$Player)
allLines$Player = gsub("(.*), *(.*)","\\1",allLines$Player)
allLines$Player = gsub("\\*$","",allLines$Player)
allLines$Player = gsub("\\s*$","",allLines$Player)
allLines$NFLTeam = gsub("\\s*(([QPDO])|(SSPD))$","",allLines$NFLTeam)
allLines$NFLPos = gsub("^(.*)\\s+(.*)$","\\2",allLines$NFLTeam)
allLines$NFLTeam = gsub("^(.*)\\s+(.*)$","\\1",allLines$NFLTeam)
allLines$NFLTeam = gsub("\\s*$","",allLines$NFLTeam)
allLines[!is.na(match(allLines$NFLTeam, nfltms$TeamName)),]$NFLPos = "D/ST"
allLines[!is.na(match(allLines$NFLTeam, nfltms$TeamName)),]$NFLTeam = as.character(nfltms[match(allLines[!is.na(match(allLines$NFLTeam,nfltms$TeamName)),]$NFLTeam,nfltms$TeamName),]$ID)
#allLines$Opponent = NULL
write.csv(allLines, file="allLines.csv")
write.csv(allLines, file="allLines.csv")
allLines = read.csv("allLines.csv")
teams = read.csv("fteams.csv")
library(sqldf)
nTeams = max(allLines$team, na.rm = TRUE)
nWeeks = max(allLines$week, na.rm = TRUE)
bestScores = data.frame(team = integer(), week = integer(), QB = integer(), RB1 = integer(), RB2 = integer(), WR1 = integer(), WR2 = integer(), TE = integer(), K = integer(), DEF = integer(), FLEX = integer(), TOTAL = integer())
weekScores = data.frame(team = integer(), week = integer(), opponent = integer(), Pts = integer(), OppPts = integer())
for (i in 1:nTeams)
{
for (j in 1:nWeeks)
{
oppid = allLines[allLines$team == i & allLines$week == j,][1,]$OppId
weekScores = rbind(weekScores, data.frame(team = i, week = j, opponent = allLines[allLines$team == i & allLines$week == j,][1,]$OppId,Pts = sum(allLines[allLines$team == i & allLines$week == j & allLines$Pos != "BN" & allLines$Pos != "IR",]$Pts, na.rm = TRUE),OppPts = sum(allLines[allLines$team == oppid & allLines$week == j & allLines$Pos != "BN" & allLines$Pos != "IR",]$Pts, na.rm = TRUE)))
}
}
weekScores$BestScore = 0
weekScores$OppBestScore = 0
for (i in 1:nTeams)
{
for (j in 1:nWeeks)
{
weekRoster = subset(allLines, allLines$team == i & allLines$week == j)
QB = sort(subset(weekRoster, weekRoster$NFLPos == "QB")$Pts,decreasing = TRUE)[1]
RB1 = sort(subset(weekRoster, weekRoster$NFLPos == "RB")$Pts,decreasing = TRUE)[1]
RB2 = sort(subset(weekRoster, weekRoster$NFLPos == "RB")$Pts,decreasing = TRUE)[2]
WR1 = sort(subset(weekRoster, weekRoster$NFLPos == "WR")$Pts,decreasing = TRUE)[1]
WR2 = sort(subset(weekRoster, weekRoster$NFLPos == "WR")$Pts,decreasing = TRUE)[2]
TE = sort(subset(weekRoster, weekRoster$NFLPos == "TE")$Pts,decreasing = TRUE)[1]
K = sort(subset(weekRoster, weekRoster$NFLPos == "K")$Pts,decreasing = TRUE)[1]
DEF = sort(subset(weekRoster, weekRoster$NFLPos == "D/ST")$Pts,decreasing = TRUE)[1]
FLEX = max(sort(subset(weekRoster, weekRoster$NFLPos == "WR")$Pts,decreasing = TRUE)[3],
sort(subset(weekRoster, weekRoster$NFLPos == "RB")$Pts,decreasing = TRUE)[3],
sort(subset(weekRoster, weekRoster$NFLPos == "TE")$Pts,decreasing = TRUE)[2], na.rm=TRUE)
TOTAL = sum(QB, RB1, RB2, WR1, WR2, TE, K, DEF, FLEX)
bestScore = cbind(team = i, week = j,QB, RB1, RB2, WR1, WR2, TE, K, DEF, FLEX,TOTAL)
bestScores = rbind(bestScores, bestScore)
weekScores[weekScores$opponent == i & weekScores$week == j,][1,]$OppBestScore = TOTAL
weekScores[weekScores$team == i & weekScores$week == j,][1,]$BestScore = TOTAL
}
}
weekScores$W = 0
weekScores[weekScores$Pts > weekScores$OppPts,]$W = 1
weekScores$L = 0
weekScores[weekScores$Pts < weekScores$OppPts,]$L = 1
weekScores$T = 0
weekScores[weekScores$Pts == weekScores$OppPts,]$T = 1
weekScores$BSW = 0
weekScores[weekScores$BestScore > weekScores$OppBestScore,]$BSW = 1
weekScores$BSL = 0
weekScores[weekScores$BestScore < weekScores$OppBestScore,]$BSL = 1
weekScores$BST = 0
weekScores[weekScores$BestScore == weekScores$OppBestScore,]$BST = 1
weekcalc = aggregate(x = weekScores, list(weekScores$team),sum)
weekcalc$team = weekcalc$team / nWeeks
weekcalc$PotentialCaptured = weekcalc$Pts/weekcalc$BestScore
plot(weekcalc$PotentialCaptured ~ weekcalc$Pts)
text(weekcalc$Pts+2, weekcalc$PotentialCaptured, weekcalc$team)
ranks = sqldf("SELECT team, sum(Pts) Pts, sum(W) Wins, sum(L) Losses FROM weekScores GROUP BY team")
ranks$score = ranks$Pts * (ranks$Wins / (ranks$Wins + ranks$Losses)) + ranks$Pts
ranks$teamName = teams[match(ranks$team, teams$id),]$team
r = ranks[,c(6,5,3,4,2)]
r[order(-r$score),]
weekScores
weekcalc
write.csv(weekScores, "weekScores.csv")
last6 = subset(weekScores, weekScores$week >= 8)
last6
last6calc = aggregate(x = last6, list(last6$team),sum)
last6calc$team = last6calc$team / nWeeks
last6calc$PotentialCaptured = last6calc$Pts/last6calc$BestScore
last6calc
last6calc[order(-last6calc$Pts)]
last6calc[order(-last6calc$Pts),]
